package negativeNumbers;

public class NegativeNumbers {

	public static void main(String[] args) {
		int k1 = 3009;
		int k2 = 0b1011_1100_0001;
		int k3 = 0xBC1;
		
		System.out.println(k1);
		System.out.println(k2);
		System.out.println(k3);
		
		int l1 = 0x4BA;
		int l2 = 0b0100_1011_1010;
		int l3 = 1210;
		System.out.println(l1);
		System.out.println(l2);
		System.out.println(l3);
		int m1 = 0b0010_0111_1001;
		int m2 = 0x279;
		int m3 = 633;
		System.out.println(m1);
		System.out.println(m2);
		System.out.println(m3);
		int result1 = k2 + l2;
		System.out.println(result1);
		int result2 = k2+m1;
		System.out.println(result2);
		int result3 = l2 + m1;
		System.out.println(result3);
		
	}

}
// sighed(-128... 0 ...+127 (-2**(n - 1) ... 0 ... +2**(n - 1) - 1) 256 number, unsigned:(0...255) 256 number 
// знакові, не знакові 
// xxxxxxxx
// 00000000 0
// 11111111 128 + 64...+ 1 = 255
// 00000101 +5(прямий код)
// 11111010 invert
// 00000001 increment
//100000101 -5 (прямий код) тільки для виведення
// 5 = (-5) = 0; x-y -> x +(-y)
// операція інвертування заміна 0 на 1 і навпаки
// операція інкрементування додавання 1 
// 00000101 +5
// 11111011 -5
//----------
//100000000(тільки 8 біт 1 пропадає)  0
// 82 -> -82
// 01010010
// 10101110
// --------
//1   ...00
// 01111111 (+127) max positive number, if bite
// 01111111 + 127
// 10000000 
// 10000001 - 127
// 10000000 - 128 max negative number 
// 00000001 +1
// 11111110
// 11111111 -1
// 00000010 +2
// 11111101
// 11111110 -2
// 10000000 -max
// 01111111
//        1    
// 10000000 - ??????
// 82 - 24 = 58  82 =(-24)
// 01010010 +82
// 00011000 +24 
// 11100111
// 11101000 -24 
// 01010010
//100111010 +58
// 00011000 +24
// 10101110 -82
// 11000110 -58
//
//K 3009(dec) = 3009/2, 1504/2, 752/2, 376/2, 188/2, 94/2, 47/2, 23/2, 11/2, 5/2, 2/2, 1 (bin)= 1011_1100_0001 = BC1 (hex)              
//                  1      0      0      0      0      0     1     1     1    1    0   1         11   12    1
//
//L 4BA(hex) = 0100_1011_1010 (bin) = 1210 (dec) 
// 2**10 + 2*7+ 2**5+2**4 +2**3 +2**2
//  1024   128   32   16    8     2 = 1210
//
//M 0010_0111_1001(bin) = (hex) 279 = 633 (dec)
// 10314 = 10314/2, 5157/2 , 2578/2, 1289/2, 644/2, 322/2, 161/2, 80/2, 40/2, 20/2, 10/2, 5/2, 2/2, 1   10100001001010	   +10314        
//            0        1        0       1       0      0     1      0     0     0    0    1    0   1    01011110110110     -10314
//
// 22 = 22/2, 11/2, 5/2 2/2, 1 = 10110 +22
//       0     1    1   0   1   01010 -22
//12345678 = 12345678/2, 6172839/2, 3086419/2, 1543209,5... 1011_1100_0110_0001_0100_1110‬ +12345678
//                                                          0100_0011_1001_1110_1011_0010 -12345678




